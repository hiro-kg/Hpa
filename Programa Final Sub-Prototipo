/*La Universidad Tecnológica de Panamá tiene planificado implementar 
nuevamente un autobús exclusivamente para los estudiantes que se movilicen 
del campus hacia el sector de Panamá Este y viceversa. Se desea experimentar 
con un prototipo tecnológico la reservación de asientos del autobús. El autobús 
tiene una capacidad máxima de 50 pasajeros, sin embargo, solo podrá ingresar 
30 pasajero. El prototipo deberá almacenar la información del estudiante que 
reserva el puesto por un monto de 45 centavos. El autobús tendrá dos horarios 
de salida del campus universitario (12:30 pm y 3:30 pm). (Funcionamiento para un día).*/

/* Hacer un menú de opciones (Reservar bus: 12:30 / 3:30), Ver lista de pasajeros del bus 12:30 / 03:30, y salir del programa.

*Para guardar la información de cada pasajero, utilizaremos 2 arreglos de estructuras, la estructura contendrá (nombre y apellido, ID, estado de compra)

*Utilizaremos un switch dentro de un ciclo infinito do-while para que el programa no se cierre hasta que se le ordene.

*Utilizaremos condicionales para evaluar si ya se alcanzó el límite de pasajeros

*Cosas que faltan:
-Mejorar el sistema de pago
-Agregar la posibilidad de editar los arreglos (ej: quitar una persona para agregar otra)
-Agregar la posibilidad de que se puedan reservar más de un puesto en la opción de reservar puesto
-La interfaz gráfica

*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>


typedef struct{
	char nombreApellido[30];
	char cedulaOpasaporte[20];  //Se definen estructuras para crear un nuevo tipo de datos y asi almacenar cadenas con las especificaciones pedidas para el programa
	char estadoDecompra[10];
}bus;

int imprimirMenu(void);
void formularioBus(bus horaDelBus[], int k);
void mensajeBusLleno(int g);
void imprimirListaPasajeros(int g, int *i, bus horaDelBus[]);
void mostrarValorIncorrecto(void);

int main(){
	//Bloque de declarativa de variables
	
	/*Varibles del bus de las 12:30*/
	bus doceYmedia[30];
	int i = 0;
	
	/*Varibles del bus de las 03:30*/
	bus tresYmedia[30];
	int k = 0;
	
	/*Otras variables*/
	int y = 1, g;
	char respuesta;
	
	//Bloque de Instrucciones
	do{
		respuesta = imprimirMenu();
		
			switch(respuesta) //switch con opciones para el momento en el que el arreglo este lleno notifique al usuario.
			{
				case 1:
					g = 12;
					(i < 30) ? formularioBus(doceYmedia, i) : mensajeBusLleno(g); //Expresión condicional que simplifica la sintaxis del if-else
					i++;														  //Si se cumple la condición se ejecuta formularioBus(), si no mensajeBusLleno()
					break;

				case 2:
					g = 03;
					(k < 30) ? formularioBus(tresYmedia, k) : mensajeBusLleno(g);
					k++;
					break;

				case 3:
					g = 12;
					imprimirListaPasajeros(g, &i, doceYmedia);
					break;

				case 4:
					g = 03;
					imprimirListaPasajeros(g, &k, tresYmedia);
					break;

				case 5:
					return 0;
					break;
				
				default:
					mostrarValorIncorrecto();
                    break;	
			}
		
	}while(y == 1);
	
	return 0;
}

/*Bloque de Funciones*/

int imprimirMenu(void)
{
	//Bloque de declarativa de variables
	int resp;
	//Bloque de Instrucciones
	printf("\t   \\                                       /\n");
	printf("\t    \\\tBienvenidos al Sistema de Buses   /"); //menú creado para que el usuario revise diferentes opciones
    printf("\n\t     \\___________________________________/\n\n");
    printf(" \"Viaja a donde sea con tu bus confiable, siempre a tiempo, nunca tarde\"\n\n");
	printf("\t ____________________________________________\n");
	printf("\t|____________________________________________|\n");
	printf("\t|\t\tMenu Principal\t\t     |\n\t|\t\t\t\t\t     |");
	printf("\n\t|Reservar un asiento -> 12:30 (1) || 3:30 (2)|\n");
	printf("\t|     Ver pasajeros del bus 12:30 -> (3)     |");
	printf("\n\t|     Ver pasajeros del bus 03:30 -> (4)     |");
	printf("\n\t|\t Cerrar el programa -> (5) \t     |");
	printf("\n\t|____________________________________________|\n");
	printf("\t|____________________________________________|\n");
	printf("\nEligir opcion: ");
	scanf("%d", &resp);
	return (resp);
}


void formularioBus(bus horaDelBus[], int k) //Funcion definida para recaudar en arreglos los nombres e identificación de los usuarios.
{
	//Bloque de declarativa de variables
	int edp;
	//Bloque de Instrucciones
	system("cls");
	fflush(stdin); //Se usa para limpiar el buffer para que no de error por ocupar demasiada memoria.
	printf("\nIngrese los siguientes datos->\n");
	printf("\n\t* Ingrese su nombre y apellido: ");
	fgets(horaDelBus[k].nombreApellido,30,stdin);
	printf("\n\t* Ingrese su cedula o pasaporte: ");
	fgets(horaDelBus[k].cedulaOpasaporte,30,stdin);
	printf("____________________________________________________________");
	printf("\n\nPresione cualquier tecla para regresar al menu principal ->");
	getch();
	system("cls");
}

void mensajeBusLleno(int g) //Funcion  que se ejecuta en el momento que el arreglo se llena.
{
	//Bloque de Instrucciones
	system("cls");
	printf("\t\tEl bus de las %d:30 ya esta lleno", g);
	printf("\n\nPresione cualquier tecla para regresar al menu principal ->");
	getch();
	system("cls");
}

void imprimirListaPasajeros(int g, int *i, bus horaDelBus[]) //Funcion para la lista de pasajeros del bus 
{
	//Bloque de declarativa de variables
	int h;
	//Bloque de Instrucciones
	system("cls");
	printf("\t       \\                                /\n");
	printf("\t\t\\Pasajeros del bus de las %.2d:30/", g);
	printf("\n\t         \\____________________________/\n");
	printf("%d/30 pasajeros", *i);
	printf("\n");
	for (h = 0; h < *i; h++)
	{
		printf("\nPasajero %d\nNombre: %sCedula/pasaporte: %s", h+1, horaDelBus[h].nombreApellido, horaDelBus[h].cedulaOpasaporte);
		printf("____________________________________________\n");
	}
	printf("\n\nPresione cualquier tecla para regresar al menu principal ->");
	getch();
	system("cls");
}

void mostrarValorIncorrecto(void) //Funcion en caso de que alguien inserte un valor no esperado
{
	//Bloque de Instrucciones
	system("cls");
	printf("\n\t\tDato incorrecto ingresado\n");
	printf("\n\nPresione cualquier tecla para regresar al menu principal ->");	
	getch();
	system("cls");
}
